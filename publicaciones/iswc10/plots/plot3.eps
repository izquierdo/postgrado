%!PS-Adobe-2.0 EPSF-2.0
%%Title: plot3.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Dec 17 17:56:29 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -86 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 260 scalefont setfont
1.000 UL
LTb
1222 780 M
63 0 V
5473 0 R
-63 0 V
stroke
1066 780 M
gsave 0 setgray
[ [(Times-Roman) 260.0 0.0 true true 0 ( 0.1)]
] -86.7 MRshow
grestore
1.000 UL
LTb
1222 1042 M
31 0 V
5505 0 R
-31 0 V
1222 1195 M
31 0 V
5505 0 R
-31 0 V
1222 1304 M
31 0 V
5505 0 R
-31 0 V
-5505 84 R
31 0 V
5505 0 R
-31 0 V
-5505 69 R
31 0 V
5505 0 R
-31 0 V
-5505 58 R
31 0 V
5505 0 R
-31 0 V
-5505 51 R
31 0 V
5505 0 R
-31 0 V
-5505 44 R
31 0 V
5505 0 R
-31 0 V
-5505 40 R
63 0 V
5473 0 R
-63 0 V
stroke
1066 1650 M
gsave 0 setgray
[ [(Times-Roman) 260.0 0.0 true true 0 ( 1)]
] -86.7 MRshow
grestore
1.000 UL
LTb
1222 1912 M
31 0 V
5505 0 R
-31 0 V
1222 2065 M
31 0 V
5505 0 R
-31 0 V
1222 2174 M
31 0 V
5505 0 R
-31 0 V
-5505 84 R
31 0 V
5505 0 R
-31 0 V
-5505 69 R
31 0 V
5505 0 R
-31 0 V
-5505 58 R
31 0 V
5505 0 R
-31 0 V
-5505 51 R
31 0 V
5505 0 R
-31 0 V
-5505 44 R
31 0 V
5505 0 R
-31 0 V
-5505 40 R
63 0 V
5473 0 R
-63 0 V
stroke
1066 2520 M
gsave 0 setgray
[ [(Times-Roman) 260.0 0.0 true true 0 ( 10)]
] -86.7 MRshow
grestore
1.000 UL
LTb
1222 2782 M
31 0 V
5505 0 R
-31 0 V
1222 2935 M
31 0 V
5505 0 R
-31 0 V
1222 3044 M
31 0 V
5505 0 R
-31 0 V
-5505 84 R
31 0 V
5505 0 R
-31 0 V
-5505 69 R
31 0 V
5505 0 R
-31 0 V
-5505 58 R
31 0 V
5505 0 R
-31 0 V
-5505 51 R
31 0 V
5505 0 R
-31 0 V
-5505 44 R
31 0 V
5505 0 R
-31 0 V
-5505 40 R
63 0 V
5473 0 R
-63 0 V
stroke
1066 3390 M
gsave 0 setgray
[ [(Times-Roman) 260.0 0.0 true true 0 ( 100)]
] -86.7 MRshow
grestore
1.000 UL
LTb
1222 3652 M
31 0 V
5505 0 R
-31 0 V
1222 3805 M
31 0 V
5505 0 R
-31 0 V
1222 3914 M
31 0 V
5505 0 R
-31 0 V
-5505 84 R
31 0 V
5505 0 R
-31 0 V
-5505 69 R
31 0 V
5505 0 R
-31 0 V
-5505 58 R
31 0 V
5505 0 R
-31 0 V
-5505 51 R
31 0 V
5505 0 R
-31 0 V
-5505 44 R
31 0 V
5505 0 R
-31 0 V
-5505 40 R
63 0 V
5473 0 R
-63 0 V
stroke
1066 4260 M
gsave 0 setgray
[ [(Times-Roman) 260.0 0.0 true true 0 ( 1000)]
] -86.7 MRshow
grestore
1.000 UL
LTb
1222 780 M
0 63 V
0 3417 R
0 -63 V
stroke
1222 520 M
gsave 0 setgray
[ [(Times-Roman) 260.0 0.0 true true 0 ( 10)]
] -86.7 MCshow
grestore
1.000 UL
LTb
2013 780 M
0 63 V
0 3417 R
0 -63 V
stroke
2013 520 M
gsave 0 setgray
[ [(Times-Roman) 260.0 0.0 true true 0 ( 20)]
] -86.7 MCshow
grestore
1.000 UL
LTb
2804 780 M
0 63 V
0 3417 R
0 -63 V
stroke
2804 520 M
gsave 0 setgray
[ [(Times-Roman) 260.0 0.0 true true 0 ( 30)]
] -86.7 MCshow
grestore
1.000 UL
LTb
3595 780 M
0 63 V
0 3417 R
0 -63 V
stroke
3595 520 M
gsave 0 setgray
[ [(Times-Roman) 260.0 0.0 true true 0 ( 40)]
] -86.7 MCshow
grestore
1.000 UL
LTb
4385 780 M
0 63 V
0 3417 R
0 -63 V
stroke
4385 520 M
gsave 0 setgray
[ [(Times-Roman) 260.0 0.0 true true 0 ( 50)]
] -86.7 MCshow
grestore
1.000 UL
LTb
5176 780 M
0 63 V
0 3417 R
0 -63 V
stroke
5176 520 M
gsave 0 setgray
[ [(Times-Roman) 260.0 0.0 true true 0 ( 60)]
] -86.7 MCshow
grestore
1.000 UL
LTb
5967 780 M
0 63 V
0 3417 R
0 -63 V
stroke
5967 520 M
gsave 0 setgray
[ [(Times-Roman) 260.0 0.0 true true 0 ( 70)]
] -86.7 MCshow
grestore
1.000 UL
LTb
6758 780 M
0 63 V
0 3417 R
0 -63 V
stroke
6758 520 M
gsave 0 setgray
[ [(Times-Roman) 260.0 0.0 true true 0 ( 80)]
] -86.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1222 780 M
5536 0 V
0 3480 V
-5536 0 V
0 -3480 V
LTb
3990 130 M
gsave 0 setgray
[ [(Times-Roman) 260.0 0.0 true true 0 (number of views)]
] -86.7 MCshow
grestore
LTb
3990 4650 M
gsave 0 setgray
[ [(Times-Roman) 260.0 0.0 true true 0 (Experiment III)]
] -86.7 MCshow
grestore
1.000 UP
2.000 UP
2.000 UL
LT0
LTb
5603 1753 M
gsave 0 setgray
[ [(Times-Roman) 260.0 0.0 true true 0 (2 goals in views)]
] -86.7 MRshow
grestore
LT0
5759 1753 M
687 0 V
1222 1614 M
395 120 V
396 242 V
395 440 V
396 -102 V
395 -118 V
396 208 V
395 112 V
395 477 V
396 -458 V
395 208 V
396 -71 V
395 229 V
396 17 V
395 -83 V
1222 1614 Pls
1617 1734 Pls
2013 1976 Pls
2408 2416 Pls
2804 2314 Pls
3199 2196 Pls
3595 2404 Pls
3990 2516 Pls
4385 2993 Pls
4781 2535 Pls
5176 2743 Pls
5572 2672 Pls
5967 2901 Pls
6363 2918 Pls
6758 2835 Pls
6102 1753 Pls
2.000 UP
2.000 UL
LT0
LTb
5603 1493 M
gsave 0 setgray
[ [(Times-Roman) 260.0 0.0 true true 0 (3 goals in views)]
] -86.7 MRshow
grestore
LT0
5759 1493 M
687 0 V
1222 1780 M
395 156 V
396 273 V
395 -32 V
396 431 V
395 -150 V
396 440 V
395 228 V
395 -165 V
396 -182 V
395 357 V
396 204 V
395 -13 V
396 181 V
395 -342 V
1222 1780 Crs
1617 1936 Crs
2013 2209 Crs
2408 2177 Crs
2804 2608 Crs
3199 2458 Crs
3595 2898 Crs
3990 3126 Crs
4385 2961 Crs
4781 2779 Crs
5176 3136 Crs
5572 3340 Crs
5967 3327 Crs
6363 3508 Crs
6758 3166 Crs
6102 1493 Crs
2.000 UP
2.000 UL
LT0
LTb
5603 1233 M
gsave 0 setgray
[ [(Times-Roman) 260.0 0.0 true true 0 (4 goals in views)]
] -86.7 MRshow
grestore
LT0
5759 1233 M
687 0 V
1222 2039 M
395 283 V
396 215 V
395 293 V
396 -150 V
395 191 V
396 220 V
395 -233 V
395 664 V
396 -327 V
395 224 V
396 -83 V
395 -66 V
396 419 V
395 24 V
1222 2039 Star
1617 2322 Star
2013 2537 Star
2408 2830 Star
2804 2680 Star
3199 2871 Star
3595 3091 Star
3990 2858 Star
4385 3522 Star
4781 3195 Star
5176 3419 Star
5572 3336 Star
5967 3270 Star
6363 3689 Star
6758 3713 Star
6102 1233 Star
2.000 UP
2.000 UL
LT0
LTb
5603 973 M
gsave 0 setgray
[ [(Times-Roman) 260.0 0.0 true true 0 (5 goals in views)]
] -86.7 MRshow
grestore
LT0
5759 973 M
687 0 V
1222 2203 M
395 152 V
396 94 V
395 65 V
396 361 V
395 752 V
396 294 V
395 102 V
395 -693 V
396 247 V
395 -465 V
396 179 V
395 222 V
396 616 V
395 -162 V
1222 2203 Box
1617 2355 Box
2013 2449 Box
2408 2514 Box
2804 2875 Box
3199 3627 Box
3595 3921 Box
3990 4023 Box
4385 3330 Box
4781 3577 Box
5176 3112 Box
5572 3291 Box
5967 3513 Box
6363 4129 Box
6758 3967 Box
6102 973 Box
1.000 UL
LTb
1222 780 M
5536 0 V
0 3480 V
-5536 0 V
0 -3480 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
